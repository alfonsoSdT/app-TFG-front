{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction CourseFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h5\", 15);\n    i0.ɵɵtext(2, \"New Course\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CourseFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h5\", 15);\n    i0.ɵɵtext(2, \"Updating Course\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CourseFormComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function CourseFormComponent_div_30_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.createCourse();\n    });\n    i0.ɵɵtext(2, \"Create Course\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction CourseFormComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function CourseFormComponent_div_31_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateCourse();\n    });\n    i0.ɵɵtext(2, \"Update Course\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let CourseFormComponent = /*#__PURE__*/(() => {\n  class CourseFormComponent {\n    constructor(_route, http, route) {\n      this._route = _route;\n      this.http = http;\n      this.route = route;\n      this.route.params.subscribe(params => this.nameParam = params['name']);\n      console.log(this.nameParam);\n    }\n\n    ngOnInit() {\n      var _a, _b;\n\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.nameParam != null) {\n          this.updating = true;\n          let url = 'http://localhost:3001/courses/name/' + this.nameParam;\n          let fetchUsers = yield fetch(url);\n          this.courseToUpdate = yield fetchUsers.json();\n          this.nameCourse = new FormControl((_a = this.courseToUpdate) === null || _a === void 0 ? void 0 : _a.nameCourse);\n          this.moreInfo = new FormControl((_b = this.courseToUpdate) === null || _b === void 0 ? void 0 : _b.moreInfo);\n          this.hoursNeeded = new FormControl(this.courseToUpdate.hoursNeeded);\n          this.pricePerHour = new FormControl(this.courseToUpdate.pricePerHour);\n        } else {\n          this.updating = false;\n          this.nameCourse = new FormControl('');\n          this.moreInfo = new FormControl('');\n          this.hoursNeeded = new FormControl('');\n          this.pricePerHour = new FormControl('');\n        }\n      });\n    }\n\n    createCourse() {\n      const nameCourse = this.nameCourse.value;\n      const moreInfo = this.moreInfo.value;\n      const hoursNeeded = this.hoursNeeded.value;\n      const pricePerHour = this.pricePerHour.value;\n      this.http.post('http://localhost:3001/courses/create', {\n        'nameCourse': nameCourse,\n        'moreInfo': moreInfo,\n        'hoursNeeded': hoursNeeded,\n        'pricePerHour': pricePerHour\n      }).subscribe(res => {\n        console.log(res);\n\n        if (res.status == 200) {\n          this._route.navigate(['courses']);\n        }\n      });\n    }\n\n    updateCourse() {\n      const idCourse = this.courseToUpdate.idCourse;\n      const nameCourse = this.nameCourse.value;\n      const moreInfo = this.moreInfo.value;\n      const hoursNeeded = this.hoursNeeded.value;\n      const pricePerHour = this.pricePerHour.value;\n      this.http.post('http://localhost:3001/courses/update', {\n        'idCourse': idCourse,\n        'nameCourse': nameCourse,\n        'moreInfo': moreInfo,\n        'hoursNeeded': hoursNeeded,\n        'pricePerHour': pricePerHour\n      }).subscribe(res => {\n        console.log(res);\n\n        if (res.status == 200) {\n          this._route.navigate(['courses']);\n        }\n      });\n    }\n\n  }\n\n  CourseFormComponent.ɵfac = function CourseFormComponent_Factory(t) {\n    return new (t || CourseFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n\n  CourseFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourseFormComponent,\n    selectors: [[\"app-course-form\"]],\n    decls: 32,\n    vars: 8,\n    consts: [[1, \"row\"], [1, \"col-md-8\"], [1, \"card\", \"card-user\"], [\"class\", \"card-header\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"col-md-3\", \"pr-1\"], [1, \"form-group\"], [\"type\", \"name\", \"placeholder\", \"Name course\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [1, \"col-md-3\", \"px-1\"], [\"type\", \"number\", \"placeholder\", \"360\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [\"type\", \"number\", \"placeholder\", \" 10$/h\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [1, \"col-md-auto\", \"px-1\", 2, \"margin-left\", \"5px\"], [\"type\", \"name\", \"placeholder\", \"More info\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [\"class\", \"update ml-auto mr-auto\", 4, \"ngIf\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"update\", \"ml-auto\", \"mr-auto\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-round\", 3, \"click\"]],\n    template: function CourseFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, CourseFormComponent_div_3_Template, 3, 0, \"div\", 3);\n        i0.ɵɵtemplate(4, CourseFormComponent_div_4_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\")(7, \"div\", 0)(8, \"div\", 5)(9, \"div\", 6)(10, \"label\");\n        i0.ɵɵtext(11, \"Name Course\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 6)(15, \"label\");\n        i0.ɵɵtext(16, \"Hours needed to complete the course\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 6)(20, \"label\");\n        i0.ɵɵtext(21, \"Price x hour of the course\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 0)(24, \"div\", 11)(25, \"div\", 6)(26, \"label\");\n        i0.ɵɵtext(27, \"More info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 0);\n        i0.ɵɵtemplate(30, CourseFormComponent_div_30_Template, 3, 0, \"div\", 13);\n        i0.ɵɵtemplate(31, CourseFormComponent_div_31_Template, 3, 0, \"div\", 13);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formControl\", ctx.nameCourse);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.hoursNeeded);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.pricePerHour);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.moreInfo);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == true);\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i4.NumberValueAccessor],\n    styles: [\"\"]\n  });\n  return CourseFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}