{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport Chart from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction TotalCostComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"i\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.nameCourse, \" \");\n  }\n}\n\nexport let TotalCostComponent = /*#__PURE__*/(() => {\n  class TotalCostComponent {\n    constructor() {\n      this.pricePerCourse = [];\n    }\n\n    ngOnInit() {\n      this.getAllThePricesOfCourses();\n      this.chartColor = \"#FFFFFF\";\n      this.canvas = document.getElementById(\"chartEmail\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.chartEmail = new Chart(this.ctx, {\n        type: 'pie',\n        data: {\n          labels: [1, 2],\n          datasets: [{\n            label: \"Emails\",\n            pointRadius: 0,\n            pointHoverRadius: 0,\n            backgroundColor: ['#e3e3e3', '#4acccd', '#fcc468', '#ef8157', '#000000'],\n            borderWidth: 0,\n            data: [this.pricePerCourse]\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          pieceLabel: {\n            render: 'percentage',\n            fontColor: ['white'],\n            precision: 2\n          },\n          tooltips: {\n            enabled: false\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                drawBorder: false,\n                zeroLineColor: \"transparent\",\n                color: 'rgba(255,255,255,0.05)'\n              }\n            }],\n            xAxes: [{\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: 'rgba(255,255,255,0.1)',\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                display: false\n              }\n            }]\n          }\n        }\n      });\n    }\n\n    getAllThePricesOfCourses() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let fetchCourses = yield fetch('http://localhost:3001/courses/status');\n        this.courses = yield fetchCourses.json(); //Get all the prices of the courses in order\n\n        for (let c of this.courses) {\n          let coursePricePerEmployee = c.pricePerHour * c.hoursNeeded; //Get the price of each course\n\n          this.pricePerCourse.push(coursePricePerEmployee);\n\n          if (c == this.courses[0]) {\n            this.try = '[' + +coursePricePerEmployee.toString() + ',';\n            ;\n          } //Get all the names of each course\n\n\n          if (c == this.courses[this.courses.length - 1]) {\n            this.try += ' ' + coursePricePerEmployee.toString() + ']';\n          }\n\n          if (!(c == this.courses[0]) && !(c == this.courses[this.courses.length - 1])) {\n            this.try += ' ' + coursePricePerEmployee.toString() + ',';\n          }\n\n          console.log(this.try);\n        }\n      });\n    }\n\n  }\n\n  TotalCostComponent.ɵfac = function TotalCostComponent_Factory(t) {\n    return new (t || TotalCostComponent)();\n  };\n\n  TotalCostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TotalCostComponent,\n    selectors: [[\"app-total-cost\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[1, \"col-md-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-category\"], [1, \"card-body\"], [\"id\", \"chartEmail\"], [1, \"card-footer\"], [\"class\", \"legend\", 4, \"ngFor\", \"ngForOf\"], [1, \"legend\"], [1, \"fa\", \"fa-circle\", \"text-primary\"]],\n    template: function TotalCostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n        i0.ɵɵtext(4, \"Email Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 4);\n        i0.ɵɵtext(6, \"Last Campaign Performance\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"canvas\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtemplate(10, TotalCostComponent_div_10_Template, 3, 1, \"div\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n      }\n    },\n    directives: [i1.NgForOf],\n    styles: [\"\"]\n  });\n  return TotalCostComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}