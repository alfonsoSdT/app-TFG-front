{"ast":null,"code":"import { Renderer2, ElementRef } from '@angular/core';\nimport { ROUTES } from '../../sidebar/sidebar.component';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nconst _c0 = [\"navbar-cmp\"];\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    constructor(location, renderer, element, router) {\n      this.renderer = renderer;\n      this.element = element;\n      this.router = router;\n      this.isCollapsed = true;\n      this.location = location;\n      this.nativeElement = element.nativeElement;\n      this.sidebarVisible = false;\n    }\n\n    ngOnInit() {\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      var navbar = this.element.nativeElement;\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n      this.router.events.subscribe(event => {\n        this.sidebarClose();\n      });\n    }\n\n    getTitle() {\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n\n      if (titlee.charAt(0) === '#') {\n        titlee = titlee.slice(1);\n      }\n\n      for (var item = 0; item < this.listTitles.length; item++) {\n        if (this.listTitles[item].path === titlee) {\n          return this.listTitles[item].title;\n        }\n      }\n\n      return '';\n    }\n\n    sidebarToggle() {\n      if (this.sidebarVisible === false) {\n        this.sidebarOpen();\n      } else {\n        this.sidebarClose();\n      }\n    }\n\n    sidebarOpen() {\n      const toggleButton = this.toggleButton;\n      const html = document.getElementsByTagName('html')[0];\n      const mainPanel = document.getElementsByClassName('main-panel')[0];\n      setTimeout(function () {\n        toggleButton.classList.add('toggled');\n      }, 500);\n      html.classList.add('nav-open');\n\n      if (window.innerWidth < 991) {\n        mainPanel.style.position = 'fixed';\n      }\n\n      this.sidebarVisible = true;\n    }\n\n    sidebarClose() {\n      const html = document.getElementsByTagName('html')[0];\n      const mainPanel = document.getElementsByClassName('main-panel')[0];\n\n      if (window.innerWidth < 991) {\n        setTimeout(function () {\n          mainPanel.style.position = '';\n        }, 500);\n      }\n\n      this.toggleButton.classList.remove('toggled');\n      this.sidebarVisible = false;\n      html.classList.remove('nav-open');\n    }\n\n    collapse() {\n      this.isCollapsed = !this.isCollapsed;\n      const navbar = document.getElementsByTagName('nav')[0];\n      console.log(navbar);\n\n      if (!this.isCollapsed) {\n        navbar.classList.remove('navbar-transparent');\n        navbar.classList.add('bg-white');\n      } else {\n        navbar.classList.add('navbar-transparent');\n        navbar.classList.remove('bg-white');\n      }\n    }\n\n    closeSession() {\n      sessionStorage.removeItem('UserName');\n      this.router.navigateByUrl('/', {\n        skipLocationChange: true\n      }).then(() => this.router.navigate([\"login\"]));\n    }\n\n    viewProfile() {\n      this.router.navigate(['user']);\n    }\n\n  }\n\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  NavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"navbar-cmp\"]],\n    viewQuery: function NavbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-absolute\", \"fixed-top\", \"navbar-transparent\"], [1, \"container-fluid\"], [1, \"navbar-wrapper\"], [1, \"navbar-toggle\"], [\"type\", \"button\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-bar\", \"bar1\"], [1, \"navbar-toggler-bar\", \"bar2\"], [1, \"navbar-toggler-bar\", \"bar3\"], [\"href\", \"javascript:void(0)\", 1, \"navbar-brand\"], [\"type\", \"button\", \"aria-controls\", \"collapseExample\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-bar\", \"navbar-kebab\"], [\"id\", \"collapseExample\", 1, \"collapse\", \"navbar-collapse\", \"justify-content-end\", 3, \"ngbCollapse\"], [1, \"navbar-nav\"], [\"ngbDropdown\", \"\", \"placement\", \"bottom-left\", 1, \"nav-item\", \"btn-rotate\"], [\"ngbDropdownToggle\", \"\", \"id\", \"navbarDropdownMenuLink\", 1, \"nav-link\"], [1, \"nc-icon\", \"nc-simple-add\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"navbarDropdownMenuLink\", 1, \"dropdown-menu\", \"dropdown-menu-right\"], [\"ngbDropdownItem\", \"\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"type\", \"submit\", \"ngbDropdownItem\", \"\", \"href\", \"javascript:void(0)\", 3, \"click\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_4_listener() {\n          return ctx.sidebarToggle();\n        });\n        i0.ɵɵelement(5, \"span\", 5)(6, \"span\", 6)(7, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"a\", 8);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_10_listener() {\n          return ctx.collapse();\n        });\n        i0.ɵɵelement(11, \"span\", 10)(12, \"span\", 10)(13, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"ul\", 12)(16, \"li\", 13)(17, \"a\", 14);\n        i0.ɵɵelement(18, \"i\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 16)(20, \"a\", 17);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_20_listener() {\n          return ctx.viewProfile();\n        });\n        i0.ɵɵtext(21, \"View profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"a\", 18);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_22_listener() {\n          return ctx.closeSession();\n        });\n        i0.ɵɵtext(23, \"Close session\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate(ctx.getTitle());\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-expanded\", !ctx.isCollapsed);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngbCollapse\", ctx.isCollapsed);\n      }\n    },\n    directives: [i3.NgbNavbar, i3.NgbCollapse, i3.NgbDropdown, i3.NgbDropdownToggle, i3.NgbDropdownMenu, i3.NgbDropdownItem],\n    encapsulation: 2\n  });\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}