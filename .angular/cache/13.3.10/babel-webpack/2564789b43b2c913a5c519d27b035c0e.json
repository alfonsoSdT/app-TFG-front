{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction UserFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h5\", 16);\n    i0.ɵɵtext(2, \"New User\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction UserFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h5\", 16);\n    i0.ɵɵtext(2, \"Updating User\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction UserFormComponent_div_28_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const course_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", course_r6.nameCourse);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(course_r6.nameCourse);\n  }\n}\n\nfunction UserFormComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 5)(2, \"h5\");\n    i0.ɵɵtext(3, \"Add a Course\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"div\", 18)(6, \"label\");\n    i0.ɵɵtext(7, \"Course Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"select\", 19)(9, \"option\", 20);\n    i0.ɵɵtext(10, \"Choose a course name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, UserFormComponent_div_28_option_11_Template, 2, 2, \"option\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6)(14, \"label\");\n    i0.ɵɵtext(15, \"Date certified \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 5)(18, \"div\", 6)(19, \"label\");\n    i0.ɵɵtext(20, \"Date expired \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 22);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.nameCourse);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.courses);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.dateCertified);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.dateExpired);\n  }\n}\n\nfunction UserFormComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function UserFormComponent_div_30_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.createUser();\n    });\n    i0.ɵɵtext(2, \"Create User\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction UserFormComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function UserFormComponent_div_31_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.updateUser();\n    });\n    i0.ɵɵtext(2, \"Update User\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent {\n    constructor(_route, http, route) {\n      this._route = _route;\n      this.http = http;\n      this.route = route;\n      this.route.params.subscribe(params => this.nameParam = params['name']);\n      this.coursePopUp = false;\n      this.upOk = false;\n    }\n\n    ngOnInit() {\n      var _a, _b, _c, _d;\n\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.nameParam != null) {\n          this.updating = true;\n          let url = 'http://localhost:3001/users/name/' + this.nameParam;\n          let fetchUsers = yield fetch(url);\n          this.userToUpdate = yield fetchUsers.json();\n          let fetchCourses = yield fetch('http://localhost:3001/courses/');\n          this.courses = yield fetchCourses.json();\n          this.data = {\n            model: null,\n            courses: this.courses\n          };\n          this.name = new FormControl((_a = this.userToUpdate) === null || _a === void 0 ? void 0 : _a.nameUser);\n          this.surname = new FormControl((_b = this.userToUpdate) === null || _b === void 0 ? void 0 : _b.surnameUser);\n          this.brithDate = new FormControl((_c = this.userToUpdate) === null || _c === void 0 ? void 0 : _c.brithDate);\n          this.email = new FormControl((_d = this.userToUpdate) === null || _d === void 0 ? void 0 : _d.email);\n          this.nameCourse = new FormControl('Choose a course name');\n          this.dateCertified = new FormControl('');\n          ;\n          this.dateExpired = new FormControl('');\n        } else {\n          this.updating = false;\n          this.name = new FormControl('');\n          this.surname = new FormControl('');\n          this.brithDate = new FormControl('');\n          ;\n          this.email = new FormControl('');\n          this.nameCourse = new FormControl('');\n          this.dateCertified = new FormControl('');\n          ;\n          this.dateExpired = new FormControl('');\n        }\n      });\n    }\n\n    createUser() {\n      const nameUser = this.name.value;\n      const surnameUser = this.surname.value;\n      const brithDate = this.brithDate.value;\n      const email = this.email.value;\n      this.http.post('http://localhost:3001/users/create', {\n        'nameUser': nameUser,\n        'surnameUser': surnameUser,\n        'brithDate': brithDate,\n        'email': email\n      }).subscribe(res => {\n        if (res.status == 200) {\n          this._route.navigate(['users']);\n        }\n      });\n    }\n\n    updateUser() {\n      const idUser = this.userToUpdate.idUser;\n      const nameUser = this.name.value;\n      const surnameUser = this.surname.value;\n      const brithDate = this.brithDate.value;\n      const email = this.email.value;\n      const nameCourse = this.nameCourse.value;\n      const dateCertified = this.dateCertified.value;\n      const dateExpired = this.dateExpired.value;\n      this.http.post('http://localhost:3001/users/update', {\n        idUser: idUser,\n        'nameUser': nameUser,\n        'surnameUser': surnameUser,\n        'brithDate': brithDate,\n        'email': email\n      }).subscribe(res => {\n        if (res.status == 200) {\n          this._route.navigate(['users']);\n        } else {\n          console.log(res.status);\n        }\n      });\n\n      if (nameCourse != \"Choose a course name\" && dateCertified != null && dateExpired != null) {\n        const newCourse = {\n          'idUser': idUser,\n          'nameCourse': nameCourse,\n          'dateCertified': dateCertified,\n          'dateExpired': dateExpired\n        };\n        this.http.post('http://localhost:3001/datacourses/create', newCourse).subscribe(res => {\n          if (res.status == 200) {\n            console.log('Creado DC');\n          }\n        }, error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: 'The user has already that course'\n          });\n        });\n      }\n    }\n\n  }\n\n  UserFormComponent.ɵfac = function UserFormComponent_Factory(t) {\n    return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n\n  UserFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserFormComponent,\n    selectors: [[\"app-user-form\"]],\n    decls: 32,\n    vars: 9,\n    consts: [[1, \"row\"], [1, \"col-md-8\"], [1, \"card\", \"card-user\"], [\"class\", \"card-header\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"col-md-3\", \"pr-1\"], [1, \"form-group\"], [\"type\", \"name\", \"placeholder\", \"User name\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [1, \"col-md-3\", \"px-1\"], [\"type\", \"name\", \"placeholder\", \"Surname\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [\"type\", \"number\", \"placeholder\", \"brithDate\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [1, \"col-md-5\", \"px-1\", 2, \"margin-left\", \"12px\"], [\"type\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [\"class\", \"row\", \"style\", \"margin-left: 5px;\", 4, \"ngIf\"], [\"class\", \"update ml-auto mr-auto\", 4, \"ngIf\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"row\", 2, \"margin-left\", \"5px\"], [1, \"col-md-5\", \"pr-1\"], [1, \"custom-select\", 3, \"formControl\"], [\"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"datetime\", \"placeholder\", \"yyyy-mm-dd\", 1, \"form-control\", \"input-no-border\", 3, \"formControl\"], [3, \"value\"], [1, \"update\", \"ml-auto\", \"mr-auto\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-round\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-round\", 3, \"click\"]],\n    template: function UserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, UserFormComponent_div_3_Template, 3, 0, \"div\", 3);\n        i0.ɵɵtemplate(4, UserFormComponent_div_4_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\")(7, \"div\", 0)(8, \"div\", 5)(9, \"div\", 6)(10, \"label\");\n        i0.ɵɵtext(11, \"User name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 6)(15, \"label\");\n        i0.ɵɵtext(16, \"Surname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 6)(20, \"label\");\n        i0.ɵɵtext(21, \"Birth date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 11)(24, \"div\", 6)(25, \"label\");\n        i0.ɵɵtext(26, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(28, UserFormComponent_div_28_Template, 22, 4, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 0);\n        i0.ɵɵtemplate(30, UserFormComponent_div_30_Template, 3, 0, \"div\", 14);\n        i0.ɵɵtemplate(31, UserFormComponent_div_31_Template, 3, 0, \"div\", 14);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formControl\", ctx.name);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.surname);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.brithDate);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.email);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.updating == true);\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i3.NgForOf],\n    encapsulation: 2\n  });\n  return UserFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}